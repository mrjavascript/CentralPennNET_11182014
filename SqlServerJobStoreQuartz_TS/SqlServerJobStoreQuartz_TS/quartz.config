  # You can configure your scheduler in either <quartz> configuration section
  # or in quartz properties file
  # Configuration section has precedence

  quartz.scheduler.instanceName = MyScheduler
  quartz.scheduler.instanceId = AUTO
  quartz.threadPool.type = Quartz.Simpl.SimpleThreadPool, Quartz

  # this section configures the scheduler to use sqlite as the jobstore
  # to use the RAM store just comment all of this out
  # to use the sqlite store, uncomment all of this
  quartz.jobStore.type = Quartz.Impl.AdoJobStore.JobStoreTX, Quartz
  quartz.jobStore.dataSource = default
  quartz.jobStore.tablePrefix = QRTZ_
  quartz.jobStore.clustered = false
  quartz.jobStore.lockHandler.type = Quartz.Impl.AdoJobStore.SimpleSemaphore, Quartz
  quartz.jobStore.driverDelegateType = Quartz.Impl.AdoJobStore.StdAdoDelegate, Quartz
  quartz.dataSource.default.provider = SqlServer-20
  quartz.jobStore.useProperties = true
  quartz.jobStore.selectWithLockSQL = SELECT * FROM {0} LOCKS UPDLOCK WHERE LOCK_NAME = @ lockName
  quartz.dataSource.default.connectionStringName = QuartzStore
  quartz.dataSource.default.connectionString = Server=(local);Database=SqlServerJobStoreQuartz_TS;UID=mike;PWD=password12345

  # this section configures the scheduler to use sql server ce as the jobstore
  #quartz.jobStore.type = Quartz.Impl.AdoJobStore.JobStoreTX, Quartz
  #quartz.jobStore.dataSource = default
  #quartz.dataSource.default.connectionString = Data Source=quartz.sdf;Persist Security Info=False;
  #quartz.jobStore.tablePrefix = QRTZ_
  #quartz.jobStore.clustered = false
  #quartz.jobStore.lockHandler.type = Quartz.Impl.AdoJobStore.UpdateLockRowSemaphore, Quartz
  #quartz.jobStore.driverDelegateType = Quartz.Impl.AdoJobStore.SqlServerDelegate, Quartz
  #quartz.dataSource.default.provider = SqlServerCe-351
  #quartz.jobStore.useProperties = true


